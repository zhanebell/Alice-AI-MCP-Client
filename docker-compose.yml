version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "8001:8001"
    volumes:
      # Mount the backend code for development hot reload
      - ./backend:/app
      # Mount the MCP server (override the backend mount for this specific directory)
      - ./mcp_server:/app/mcp_server
      # Persist database data
      - ./backend/assignments.db:/app/assignments.db
      # Mount the .env file so the container can access environment variables
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - GROQ_API_KEY=${GROQ_API_KEY}
    env_file:
      - .env
    networks:
      - alice-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      # Mount the frontend code for development hot reload
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8001
    networks:
      - alice-ai-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  alice-ai-network:
    driver: bridge

volumes:
  node_modules:
